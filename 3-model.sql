-- You don't always need this, it just helps ensure repeatability.
USE ROLE ACCOUNTADMIN;

CREATE OR REPLACE SNOWFLAKE.ML.CLASSIFICATION BIZTECH_DEMO.CLF.PREDICT_PERFORMANCE(
    INPUT_DATA => SYSTEM$REFERENCE('TABLE', 'BIZTECH_DEMO.CLF.TRAINING_DATA'),
    TARGET_COLNAME => 'EXAM_PERFORMANCE',
    CONFIG_OBJECT => { 'ON_ERROR': 'SKIP' }
);

-- Inspect your logs to ensure training completed successfully. 
-- CALL BIZTECH_DEMO.CLF.PREDICT_PERFORMANCE!SHOW_TRAINING_LOGS();

-- Generate predictions as new columns in to your prediction table.
CREATE OR REPLACE TABLE 
    BIZTECH_DEMO.CLF.PREDICTIONS
AS 
    SELECT
        *, 
        BIZTECH_DEMO.CLF.PREDICT_PERFORMANCE!PREDICT(
            OBJECT_CONSTRUCT(*)
        ):class as PREDICTED_PERFORMANCE
    from BIZTECH_DEMO.CLF.TEST_DATA;

SELECT * FROM BIZTECH_DEMO.CLF.PREDICTIONS LIMIT 10;


CREATE OR REPLACE VIEW
    BIZTECH_DEMO.CLF.CORRECT_PREDICTIONS_COUNT
AS
    SELECT
        EXAM_PERFORMANCE,
        COUNT(*) AS NUM_CORRECT
    FROM
        BIZTECH_DEMO.CLF.PREDICTIONS
    WHERE
        EXAM_PERFORMANCE = PREDICTED_PERFORMANCE
    GROUP BY
        EXAM_PERFORMANCE;

SELECT * FROM BIZTECH_DEMO.CLF.CORRECT_PREDICTIONS_COUNT;

SELECT * FROM BIZTECH_DEMO.CLF.TEST_DATA_SUPPORT;
        
SELECT
    COUNTS.EXAM_PERFORMANCE AS EXAM_PERFORMANCE,
    ROUND(100 * NUM_CORRECT / NUM_STUDENTS, 2) AS ACCURACY
FROM
    BIZTECH_DEMO.CLF.CORRECT_PREDICTIONS_COUNT AS COUNTS
JOIN
    BIZTECH_DEMO.CLF.TEST_DATA_SUPPORT AS SUPPORT
ON
    COUNTS.EXAM_PERFORMANCE = SUPPORT.EXAM_PERFORMANCE;

